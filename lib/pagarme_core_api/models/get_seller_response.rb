# pagarme_core_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PagarmeCoreApi
  # GetSellerResponse Model.
  class GetSellerResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Identification
    # @return [String]
    attr_accessor :id

    # Identification
    # @return [String]
    attr_accessor :name

    # Identification
    # @return [String]
    attr_accessor :code

    # Identification
    # @return [String]
    attr_accessor :document

    # Description
    # @return [String]
    attr_accessor :description

    # Status
    # @return [String]
    attr_accessor :status

    # Creation date
    # @return [String]
    attr_accessor :created_at

    # Updated date
    # @return [String]
    attr_accessor :updated_at

    # Address
    # @return [GetAddressResponse]
    attr_accessor :address

    # Metadata
    # @return [Hash]
    attr_accessor :metadata

    # Deleted date
    # @return [String]
    attr_accessor :deleted_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['code'] = 'code'
      @_hash['document'] = 'document'
      @_hash['description'] = 'description'
      @_hash['status'] = 'Status'
      @_hash['created_at'] = 'CreatedAt'
      @_hash['updated_at'] = 'UpdatedAt'
      @_hash['address'] = 'Address'
      @_hash['metadata'] = 'Metadata'
      @_hash['deleted_at'] = 'DeletedAt'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        deleted_at
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(id = nil,
                   name = nil,
                   code = nil,
                   document = nil,
                   description = nil,
                   status = nil,
                   created_at = nil,
                   updated_at = nil,
                   address = nil,
                   metadata = nil,
                   deleted_at = nil)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @code = code unless code == SKIP
      @document = document unless document == SKIP
      @description = description unless description == SKIP
      @status = status unless status == SKIP
      @created_at = created_at unless created_at == SKIP
      @updated_at = updated_at unless updated_at == SKIP
      @address = address unless address == SKIP
      @metadata = metadata unless metadata == SKIP
      @deleted_at = deleted_at unless deleted_at == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      code = hash.key?('code') ? hash['code'] : SKIP
      document = hash.key?('document') ? hash['document'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      created_at = hash.key?('CreatedAt') ? hash['CreatedAt'] : SKIP
      updated_at = hash.key?('UpdatedAt') ? hash['UpdatedAt'] : SKIP
      address = GetAddressResponse.from_hash(hash['Address']) if hash['Address']
      metadata = hash.key?('Metadata') ? hash['Metadata'] : SKIP
      deleted_at = hash.key?('DeletedAt') ? hash['DeletedAt'] : SKIP

      # Create object from extracted values.
      GetSellerResponse.new(id,
                            name,
                            code,
                            document,
                            description,
                            status,
                            created_at,
                            updated_at,
                            address,
                            metadata,
                            deleted_at)
    end
  end
end
